/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.11-SNAPSHOT
 *
 */


import Foundation


/** The request does not have any required fields. When given no query criteria, SearchOrders will return all results for all of the merchantâ€™s locations. When fetching additional pages using a &#x60;cursor&#x60;, the &#x60;query&#x60; must be equal to the &#x60;query&#x60; used to fetch the first page of results. */

public struct SearchOrdersRequest: Codable {

    /** The location IDs for the orders to query. All locations must belong to the same merchant.  Min: 1 location IDs.  Max: 10 location IDs. */
    public let locationIds: [String]?
    /** A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for your original query. See [Pagination](/basics/api101/pagination) for more information. */
    public let cursor: String?
    /** Query conditions used to filter or sort the results. Note that when fetching additional pages using a cursor, the query must be equal to the query used to fetch the first page of results. */
    public let query: SearchOrdersQuery?
    /** Maximum number of results to be returned in a single page. It is possible to receive fewer results than the specified limit on a given page.  Default: &#x60;500&#x60; */
    public let limit: Int?
    /** Boolean that controls the format of the search results. If &#x60;true&#x60;, SearchOrders will return [&#x60;OrderEntry&#x60;](#type-orderentry) objects. If &#x60;false&#x60;, SearchOrders will return complete Order objects.  Default: &#x60;false&#x60;. */
    public let returnEntries: Bool?

    public init(locationIds: [String]?, cursor: String?, query: SearchOrdersQuery?, limit: Int?, returnEntries: Bool?) {
        self.locationIds = locationIds
        self.cursor = cursor
        self.query = query
        self.limit = limit
        self.returnEntries = returnEntries
    }

    public enum CodingKeys: String, CodingKey { 
        case locationIds = "location_ids"
        case cursor
        case query
        case limit
        case returnEntries = "return_entries"
    }

}

