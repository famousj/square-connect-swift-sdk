/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.11-SNAPSHOT
 *
 */


import Foundation


/** Defines the body parameters that can be provided in a request to the UpdateCustomer endpoint. */

public struct UpdateCustomerRequest: Codable {

    /** The customer&#39;s given (i.e., first) name. */
    public let givenName: String?
    /** The customer&#39;s family (i.e., last) name. */
    public let familyName: String?
    /** The name of the customer&#39;s company. */
    public let companyName: String?
    /** A nickname for the customer. */
    public let nickname: String?
    /** The customer&#39;s email address. */
    public let emailAddress: String?
    /** The customer&#39;s physical address. */
    public let address: Address?
    /** The customer&#39;s phone number. */
    public let phoneNumber: String?
    /** An optional second ID you can set to associate the customer with an entity in another system. */
    public let referenceId: String?
    /** An optional note to associate with the customer. */
    public let note: String?
    /** The customer birthday in RFC-3339 format. Year is optional, timezone and times are not allowed. Example: &#x60;0000-09-01T00:00:00-00:00&#x60; for a birthday on September 1st. &#x60;1998-09-01T00:00:00-00:00&#x60; for a birthday on September 1st 1998. */
    public let birthday: String?

    public init(givenName: String?, familyName: String?, companyName: String?, nickname: String?, emailAddress: String?, address: Address?, phoneNumber: String?, referenceId: String?, note: String?, birthday: String?) {
        self.givenName = givenName
        self.familyName = familyName
        self.companyName = companyName
        self.nickname = nickname
        self.emailAddress = emailAddress
        self.address = address
        self.phoneNumber = phoneNumber
        self.referenceId = referenceId
        self.note = note
        self.birthday = birthday
    }

    public enum CodingKeys: String, CodingKey { 
        case givenName = "given_name"
        case familyName = "family_name"
        case companyName = "company_name"
        case nickname
        case emailAddress = "email_address"
        case address
        case phoneNumber = "phone_number"
        case referenceId = "reference_id"
        case note
        case birthday
    }

}

