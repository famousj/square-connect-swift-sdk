/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.11-SNAPSHOT
 *
 */


import Foundation


/** A defined break template that sets an expectation for possible &#x60;Break&#x60;  instances on a &#x60;Shift&#x60;. */

public struct BreakType: Codable, Identifiable {

    /** UUID for this object. */
    public let id: String?
    /** The ID of the business location this type of break applies to. */
    public let locationId: String
    /** A human-readable name for this type of break. Will be displayed to employees in Square products. */
    public let breakName: String
    /** Format: RFC-3339 P[n]Y[n]M[n]DT[n]H[n]M[n]S. The expected length of this break. Precision below minutes is truncated. */
    public let expectedDuration: String
    /** Whether this break counts towards time worked for compensation purposes. */
    public let isPaid: Bool
    /** Used for resolving concurrency issues; request will fail if version provided does not match server version at time of request. If a value is not provided, Square&#39;s servers execute a \&quot;blind\&quot; write; potentially  overwriting another writer&#39;s data. */
    public let version: Int?
    /** A read-only timestamp in RFC 3339 format. */
    public let createdAt: String?
    /** A read-only timestamp in RFC 3339 format. */
    public let updatedAt: String?

    public init(id: String?, locationId: String, breakName: String, expectedDuration: String, isPaid: Bool, version: Int?, createdAt: String?, updatedAt: String?) {
        self.id = id
        self.locationId = locationId
        self.breakName = breakName
        self.expectedDuration = expectedDuration
        self.isPaid = isPaid
        self.version = version
        self.createdAt = createdAt
        self.updatedAt = updatedAt
    }

    public enum CodingKeys: String, CodingKey { 
        case id
        case locationId = "location_id"
        case breakName = "break_name"
        case expectedDuration = "expected_duration"
        case isPaid = "is_paid"
        case version
        case createdAt = "created_at"
        case updatedAt = "updated_at"
    }

}

