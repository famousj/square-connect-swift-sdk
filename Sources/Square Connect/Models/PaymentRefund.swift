/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.11-SNAPSHOT
 *
 */


import Foundation


/** Represents a refund of a payment made using Square. Contains information on the original payment and the amount of money refunded. */

public struct PaymentRefund: Codable, Identifiable {

    /** Unique ID for this refund, generated by Square. */
    public let id: String
    /** The refund&#39;s status: - &#x60;PENDING&#x60; - awaiting approval - &#x60;COMPLETED&#x60; - successfully completed - &#x60;REJECTED&#x60; - the refund was rejected - &#x60;FAILED&#x60; - an error occurred */
    public let status: String?
    /** Location ID associated with the payment this refund is attached to. */
    public let locationId: String?
    /** The amount of money refunded, specified in the smallest denomination of the applicable currency. For example, US dollar amounts are specified in cents. */
    public let amountMoney: Money
    /** Amount of money the app developer contributed to help cover the refunded amount. Specified in the smallest denomination of the applicable currency. For example, US dollar amounts are specified in cents. See [Working with monetary amounts](/build-basics/working-with-monetary-amounts) for details. */
    public let appFeeMoney: Money?
    /** Processing fees and fee adjustments assessed by Square on this refund. */
    public let processingFee: [ProcessingFee]?
    /** The ID of the payment assocated with this refund. */
    public let paymentId: String?
    /** The ID of the order associated with the refund. */
    public let orderId: String?
    /** The reason for the refund. */
    public let reason: String?
    /** Timestamp of when the refund was created, in RFC 3339 format. */
    public let createdAt: String?
    /** Timestamp of when the refund was last updated, in RFC 3339 format. */
    public let updatedAt: String?

    public init(id: String, status: String?, locationId: String?, amountMoney: Money, appFeeMoney: Money?, processingFee: [ProcessingFee]?, paymentId: String?, orderId: String?, reason: String?, createdAt: String?, updatedAt: String?) {
        self.id = id
        self.status = status
        self.locationId = locationId
        self.amountMoney = amountMoney
        self.appFeeMoney = appFeeMoney
        self.processingFee = processingFee
        self.paymentId = paymentId
        self.orderId = orderId
        self.reason = reason
        self.createdAt = createdAt
        self.updatedAt = updatedAt
    }

    public enum CodingKeys: String, CodingKey { 
        case id
        case status
        case locationId = "location_id"
        case amountMoney = "amount_money"
        case appFeeMoney = "app_fee_money"
        case processingFee = "processing_fee"
        case paymentId = "payment_id"
        case orderId = "order_id"
        case reason
        case createdAt = "created_at"
        case updatedAt = "updated_at"
    }

}

