/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.11-SNAPSHOT
 *
 */


import Foundation


/** Retrieves a list of refunds for the account making the request.  Max results per page: 100 */

public struct ListPaymentRefundsRequest: Codable {

    /** Timestamp for the beginning of the requested reporting period, in RFC 3339 format.  Default: The current time minus one year. */
    public let beginTime: String?
    /** Timestamp for the end of the requested reporting period, in RFC 3339 format.  Default: The current time. */
    public let endTime: String?
    /** The order in which results are listed. - &#x60;ASC&#x60; - oldest to newest - &#x60;DESC&#x60; - newest to oldest (default). */
    public let sortOrder: String?
    /** A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for the original query.  See [Pagination](/basics/api101/pagination) for more information. */
    public let cursor: String?
    /** ID of location associated with payment. */
    public let locationId: String?
    /** If provided, only refunds with the given status are returned.  For a list of refund status values, see [PaymentRefund](#type-paymentrefund).  Default: If omitted refunds are returned regardless of status. */
    public let status: String?
    /** If provided, only refunds with the given source type are returned.  - &#x60;CARD&#x60; - List refunds only for payments where card was specified as payment  source.  Default: If omitted refunds are returned regardless of source type. */
    public let sourceType: String?

    public init(beginTime: String?, endTime: String?, sortOrder: String?, cursor: String?, locationId: String?, status: String?, sourceType: String?) {
        self.beginTime = beginTime
        self.endTime = endTime
        self.sortOrder = sortOrder
        self.cursor = cursor
        self.locationId = locationId
        self.status = status
        self.sourceType = sourceType
    }

    public enum CodingKeys: String, CodingKey { 
        case beginTime = "begin_time"
        case endTime = "end_time"
        case sortOrder = "sort_order"
        case cursor
        case locationId = "location_id"
        case status
        case sourceType = "source_type"
    }

}

