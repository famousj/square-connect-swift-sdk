/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.11-SNAPSHOT
 *
 */


import Foundation


/** Represents a collection of catalog objects for the purpose of applying a [PricingRule](#type-pricingrule). Including a catalog object will include all of its subtypes. For example, including a category in a product set will include all of its items and associated item variations in the product set. Including an item in a product set will also include its item variations. */

public struct CatalogProductSet: Codable {

    /**  User-defined name for the product set. For example, \&quot;Clearance Items\&quot; or \&quot;Winter Sale Items\&quot;. */
    public let name: String?
    /** Unique IDs for any [CatalogObjects](#type-catalogobject)s to include in this product set. Any number of these catalog objects can be in an order for a pricing rule to apply.  This can be used with &#x60;product_ids_all&#x60; in a parent [CatalogProductSet](#type-catalogproductset) to match groups of products for a bulk discount, such as a discount for an entree and side combo.  Only one of &#x60;product_ids_all&#x60;, &#x60;product_ids_any&#x60;, or &#x60;all_products&#x60; can be set.  Max: 500 catalog object IDs. */
    public let productIdsAny: [String]?
    /** Unique IDs for [CatalogObjects](#type-catalogobject) to include in this product set. All objects in this set must be included in an order for a pricing rule to apply.  Only one of &#x60;product_ids_all&#x60;, &#x60;product_ids_any&#x60;, or &#x60;all_products&#x60; can be set.  Max: 500 catalog object IDs. */
    public let productIdsAll: [String]?
    /** If set, there must be exactly this many items from &#x60;products_any&#x60; or &#x60;products_all&#x60; in the cart for the discount to apply.  Cannot be combined with either &#x60;quantity_min&#x60; or &#x60;quantity_max&#x60;. */
    public let quantityExact: Int64?
    /** If set, there must be at least this many items from &#x60;products_any&#x60; or &#x60;products_all&#x60; in a cart for the discount to apply. See &#x60;quantity_exact&#x60;. Defaults to 0 if &#x60;quantity_exact&#x60;, &#x60;quantity_min&#x60; and &#x60;quantity_max&#x60; are all unspecified. */
    public let quantityMin: Int64?
    /** If set, the pricing rule will apply to a maximum of this many items from &#x60;products_any&#x60; or &#x60;products_all&#x60;. */
    public let quantityMax: Int64?
    /** If set to &#x60;true&#x60;, the product set will include every item in the catalog.  Only one of &#x60;product_ids_all&#x60;, &#x60;product_ids_any&#x60;, or &#x60;all_products&#x60; can be set. */
    public let allProducts: Bool?

    public init(name: String?, productIdsAny: [String]?, productIdsAll: [String]?, quantityExact: Int64?, quantityMin: Int64?, quantityMax: Int64?, allProducts: Bool?) {
        self.name = name
        self.productIdsAny = productIdsAny
        self.productIdsAll = productIdsAll
        self.quantityExact = quantityExact
        self.quantityMin = quantityMin
        self.quantityMax = quantityMax
        self.allProducts = allProducts
    }

    public enum CodingKeys: String, CodingKey { 
        case name
        case productIdsAny = "product_ids_any"
        case productIdsAll = "product_ids_all"
        case quantityExact = "quantity_exact"
        case quantityMin = "quantity_min"
        case quantityMax = "quantity_max"
        case allProducts = "all_products"
    }

}

