/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.11-SNAPSHOT
 *
 */


import Foundation


/** A query to be applied to a [SearchCatalogObjectsRequest](#type-searchcatalogobjectsrequest). Only one query field may be present.  Where an attribute name is required, it should be specified as the name of any field marked \&quot;searchable\&quot; from the structured data types for the desired result object type(s) ([CatalogItem](#type-catalogitem), [CatalogItemVariation](#type-catalogitemvariation), [CatalogCategory](#type-catalogcategory), [CatalogTax](#type-catalogtax), [CatalogDiscount](#type-catalogdiscount), [CatalogModifierList](#type-catalogmodifierlist), [CatalogModifier](#type-catalogmodifier)).  For example, a query that should return Items may specify attribute names from any of the searchable fields of the [CatalogItem](#type-catalogitem) data type, namely &#x60;\&quot;name\&quot;&#x60;, &#x60;\&quot;description\&quot;&#x60;, and &#x60;\&quot;abbreviation\&quot;&#x60;. */

public struct CatalogQuery: Codable {

    /** A query that returns all objects, sorted by the given attribute. */
    public let sortedAttributeQuery: CatalogQuerySortedAttribute?
    /** A query that returns only objects for which the given (string-valued) attribute has the given case-insensitive value. */
    public let exactQuery: CatalogQueryExact?
    /** A query that returns only objects for which the given (string-valued) attribute has the given case-insensitive prefix. */
    public let prefixQuery: CatalogQueryPrefix?
    /** A query that returns only objects for which the given (integer-valued) attribute lies in the given range. */
    public let rangeQuery: CatalogQueryRange?
    /** A query that returns only objects whose searchable attributes contain all of the given keywords as prefixes. For example, if a [CatalogItem](#type-catalogitem) contains attributes &#x60;{\&quot;name\&quot;: \&quot;t-shirt\&quot;}&#x60; and &#x60;{\&quot;description\&quot;: \&quot;Small, Purple\&quot;}&#x60;, it will be matched by the query &#x60;{\&quot;keywords\&quot;: [\&quot;shirt\&quot;, \&quot;sma\&quot;, \&quot;purp\&quot;]}&#x60;. */
    public let textQuery: CatalogQueryText?
    /** A query that returns all [CatalogItem](#type-catalogitem)s that have any of the given [CatalogTax](#type-catalogtax)es enabled. */
    public let itemsForTaxQuery: CatalogQueryItemsForTax?
    /** A query that returns all [CatalogItem](#type-catalogitem)s that have any of the given [CatalogModifierList](#type-catalogmodifierlist)s enabled. */
    public let itemsForModifierListQuery: CatalogQueryItemsForModifierList?
    /** A query that returns all [CatalogItem](#type-catalogitem)s that have all of the given [CatalogItemOption](#type-catalogitemoption)s. */
    public let itemsForItemOptionsQuery: CatalogQueryItemsForItemOptions?
    /** A query that returns all [CatalogItemVariation](#type-catalogitemvariations)s that have all of the given [CatalogItemOption](#type-catalogitemoption) values. */
    public let itemVariationsForItemOptionValuesQuery: CatalogQueryItemVariationsForItemOptionValues?

    public init(sortedAttributeQuery: CatalogQuerySortedAttribute?, exactQuery: CatalogQueryExact?, prefixQuery: CatalogQueryPrefix?, rangeQuery: CatalogQueryRange?, textQuery: CatalogQueryText?, itemsForTaxQuery: CatalogQueryItemsForTax?, itemsForModifierListQuery: CatalogQueryItemsForModifierList?, itemsForItemOptionsQuery: CatalogQueryItemsForItemOptions?, itemVariationsForItemOptionValuesQuery: CatalogQueryItemVariationsForItemOptionValues?) {
        self.sortedAttributeQuery = sortedAttributeQuery
        self.exactQuery = exactQuery
        self.prefixQuery = prefixQuery
        self.rangeQuery = rangeQuery
        self.textQuery = textQuery
        self.itemsForTaxQuery = itemsForTaxQuery
        self.itemsForModifierListQuery = itemsForModifierListQuery
        self.itemsForItemOptionsQuery = itemsForItemOptionsQuery
        self.itemVariationsForItemOptionValuesQuery = itemVariationsForItemOptionValuesQuery
    }

    public enum CodingKeys: String, CodingKey { 
        case sortedAttributeQuery = "sorted_attribute_query"
        case exactQuery = "exact_query"
        case prefixQuery = "prefix_query"
        case rangeQuery = "range_query"
        case textQuery = "text_query"
        case itemsForTaxQuery = "items_for_tax_query"
        case itemsForModifierListQuery = "items_for_modifier_list_query"
        case itemsForItemOptionsQuery = "items_for_item_options_query"
        case itemVariationsForItemOptionValuesQuery = "item_variations_for_item_option_values_query"
    }

}

