/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.11-SNAPSHOT
 *
 */


import Foundation


/** Represents a timecard for an employee. */

public struct V1Timecard: Codable, Identifiable {

    /** The timecard&#39;s unique ID. */
    public let id: String?
    /** The ID of the employee the timecard is associated with. */
    public let employeeId: String
    /** If true, the timecard was deleted by the merchant, and it is no longer valid. */
    public let deleted: Bool?
    /** The clock-in time for the timecard, in ISO 8601 format. */
    public let clockinTime: String?
    /** The clock-out time for the timecard, in ISO 8601 format. Provide this value only if importing timecard information from another system. */
    public let clockoutTime: String?
    /** The ID of the location the employee clocked in from. We strongly reccomend providing a clockin_location_id. Square uses the clockin_location_id to determine a timecardâ€™s timezone and overtime rules. */
    public let clockinLocationId: String?
    /** The ID of the location the employee clocked out from. Provide this value only if importing timecard information from another system. */
    public let clockoutLocationId: String?
    /** The time when the timecard was created, in ISO 8601 format. */
    public let createdAt: String?
    /** The time when the timecard was most recently updated, in ISO 8601 format. */
    public let updatedAt: String?
    /** The total number of regular (non-overtime) seconds worked in the timecard. */
    public let regularSecondsWorked: Double?
    /** The total number of overtime seconds worked in the timecard. */
    public let overtimeSecondsWorked: Double?
    /** The total number of doubletime seconds worked in the timecard. */
    public let doubletimeSecondsWorked: Double?

    public init(id: String?, employeeId: String, deleted: Bool?, clockinTime: String?, clockoutTime: String?, clockinLocationId: String?, clockoutLocationId: String?, createdAt: String?, updatedAt: String?, regularSecondsWorked: Double?, overtimeSecondsWorked: Double?, doubletimeSecondsWorked: Double?) {
        self.id = id
        self.employeeId = employeeId
        self.deleted = deleted
        self.clockinTime = clockinTime
        self.clockoutTime = clockoutTime
        self.clockinLocationId = clockinLocationId
        self.clockoutLocationId = clockoutLocationId
        self.createdAt = createdAt
        self.updatedAt = updatedAt
        self.regularSecondsWorked = regularSecondsWorked
        self.overtimeSecondsWorked = overtimeSecondsWorked
        self.doubletimeSecondsWorked = doubletimeSecondsWorked
    }

    public enum CodingKeys: String, CodingKey { 
        case id
        case employeeId = "employee_id"
        case deleted
        case clockinTime = "clockin_time"
        case clockoutTime = "clockout_time"
        case clockinLocationId = "clockin_location_id"
        case clockoutLocationId = "clockout_location_id"
        case createdAt = "created_at"
        case updatedAt = "updated_at"
        case regularSecondsWorked = "regular_seconds_worked"
        case overtimeSecondsWorked = "overtime_seconds_worked"
        case doubletimeSecondsWorked = "doubletime_seconds_worked"
    }

}

