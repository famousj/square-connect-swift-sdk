/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.11-SNAPSHOT
 *
 */


import Foundation


/** Represents a transaction processed with Square, either with the Connect API or with Square Point of Sale.  The &#x60;tenders&#x60; field of this object lists all methods of payment used to pay in the transaction. */

public struct Transaction: Codable, Identifiable {

    /** The transaction&#39;s unique ID, issued by Square payments servers. */
    public let id: String?
    /** The ID of the transaction&#39;s associated location. */
    public let locationId: String?
    /** The time when the transaction was created, in RFC 3339 format. */
    public let createdAt: String?
    /** The tenders used to pay in the transaction. */
    public let tenders: [Tender]?
    /** Refunds that have been applied to any tender in the transaction. */
    public let refunds: [Refund]?
    /** If the transaction was created with the [Charge](#endpoint-transactions-charge) endpoint, this value is the same as the value provided for the &#x60;reference_id&#x60; parameter in the request to that endpoint. Otherwise, it is not set. */
    public let referenceId: String?
    /** The Square product that processed the transaction. See [TransactionProduct](#type-transactionproduct) for possible values */
    public let product: TransactionProduct?
    /** If the transaction was created in the Square Point of Sale app, this value is the ID generated for the transaction by Square Point of Sale.  This ID has no relationship to the transaction&#39;s canonical &#x60;id&#x60;, which is generated by Square&#39;s backend servers. This value is generated for bookkeeping purposes, in case the transaction cannot immediately be completed (for example, if the transaction is processed in offline mode).  It is not currently possible with the Connect API to perform a transaction lookup by this value. */
    public let clientId: String?
    /** The shipping address provided in the request, if any. */
    public let shippingAddress: Address?
    /** The order_id is an identifier for the order associated with this transaction, if any. */
    public let orderId: String?

    public init(id: String?, locationId: String?, createdAt: String?, tenders: [Tender]?, refunds: [Refund]?, referenceId: String?, product: TransactionProduct?, clientId: String?, shippingAddress: Address?, orderId: String?) {
        self.id = id
        self.locationId = locationId
        self.createdAt = createdAt
        self.tenders = tenders
        self.refunds = refunds
        self.referenceId = referenceId
        self.product = product
        self.clientId = clientId
        self.shippingAddress = shippingAddress
        self.orderId = orderId
    }

    public enum CodingKeys: String, CodingKey { 
        case id
        case locationId = "location_id"
        case createdAt = "created_at"
        case tenders
        case refunds
        case referenceId = "reference_id"
        case product
        case clientId = "client_id"
        case shippingAddress = "shipping_address"
        case orderId = "order_id"
    }

}

