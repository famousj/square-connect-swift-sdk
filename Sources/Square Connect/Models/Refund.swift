/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.11-SNAPSHOT
 *
 */


import Foundation


/** Represents a refund processed for a Square transaction. */

public struct Refund: Codable, Identifiable {

    /** The refund&#39;s unique ID. */
    public let id: String
    /** The ID of the refund&#39;s associated location. */
    public let locationId: String
    /** The ID of the transaction that the refunded tender is part of. */
    public let transactionId: String
    /** The ID of the refunded tender. */
    public let tenderId: String
    /** The time when the refund was created, in RFC 3339 format. */
    public let createdAt: String?
    /** The reason for the refund being issued. */
    public let reason: String
    /** The amount of money refunded to the buyer. */
    public let amountMoney: Money
    /** The current status of the refund (&#x60;PENDING&#x60;, &#x60;APPROVED&#x60;, &#x60;REJECTED&#x60;, or &#x60;FAILED&#x60;). See [RefundStatus](#type-refundstatus) for possible values */
    public let status: RefundStatus
    /** The amount of Square processing fee money refunded to the *merchant*. */
    public let processingFeeMoney: Money?
    /** Additional recipients (other than the merchant) receiving a portion of this refund. For example, fees assessed on a refund of a purchase by a third party integration. */
    public let additionalRecipients: [AdditionalRecipient]?

    public init(id: String, locationId: String, transactionId: String, tenderId: String, createdAt: String?, reason: String, amountMoney: Money, status: RefundStatus, processingFeeMoney: Money?, additionalRecipients: [AdditionalRecipient]?) {
        self.id = id
        self.locationId = locationId
        self.transactionId = transactionId
        self.tenderId = tenderId
        self.createdAt = createdAt
        self.reason = reason
        self.amountMoney = amountMoney
        self.status = status
        self.processingFeeMoney = processingFeeMoney
        self.additionalRecipients = additionalRecipients
    }

    public enum CodingKeys: String, CodingKey { 
        case id
        case locationId = "location_id"
        case transactionId = "transaction_id"
        case tenderId = "tender_id"
        case createdAt = "created_at"
        case reason
        case amountMoney = "amount_money"
        case status
        case processingFeeMoney = "processing_fee_money"
        case additionalRecipients = "additional_recipients"
    }

}

