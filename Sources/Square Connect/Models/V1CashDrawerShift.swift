/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.11-SNAPSHOT
 *
 */


import Foundation


/** Contains details for a single cash drawer shift. */

public struct V1CashDrawerShift: Codable, Identifiable {

    /** The shift&#39;s unique ID. */
    public let id: String?
    /** The shift&#39;s current state. See [V1CashDrawerShiftEventType](#type-v1cashdrawershifteventtype) for possible values */
    public let eventType: V1CashDrawerShiftEventType?
    /** The time when the shift began, in ISO 8601 format. */
    public let openedAt: String?
    /** The time when the shift ended, in ISO 8601 format. */
    public let endedAt: String?
    /** The time when the shift was closed, in ISO 8601 format. */
    public let closedAt: String?
    /** The IDs of all employees that were logged into Square Register at some point during the cash drawer shift. */
    public let employeeIds: [String]?
    /** The ID of the employee that started the cash drawer shift. */
    public let openingEmployeeId: String?
    /** The ID of the employee that ended the cash drawer shift. */
    public let endingEmployeeId: String?
    /** The ID of the employee that closed the cash drawer shift by auditing the cash drawer&#39;s contents. */
    public let closingEmployeeId: String?
    /** A description of the cash drawer shift. */
    public let _description: String?
    /** The amount of money in the cash drawer at the start of the shift. */
    public let startingCashMoney: V1Money?
    /** The amount of money added to the cash drawer from cash payments. */
    public let cashPaymentMoney: V1Money?
    /** The amount of money removed from the cash drawer from cash refunds. This value is always negative or zero. */
    public let cashRefundsMoney: V1Money?
    /** The amount of money added to the cash drawer for reasons other than cash payments. */
    public let cashPaidInMoney: V1Money?
    /** The amount of money removed from the cash drawer for reasons other than cash refunds. */
    public let cashPaidOutMoney: V1Money?
    /** The amount of money that should be in the cash drawer at the end of the shift, based on the shift&#39;s other money amounts. */
    public let expectedCashMoney: V1Money?
    /** The amount of money found in the cash drawer at the end of the shift by an auditing employee. */
    public let closedCashMoney: V1Money?
    /** The device running Square Register that was connected to the cash drawer. */
    public let device: Device?
    /** All of the events (payments, refunds, and so on) that involved the cash drawer during the shift. */
    public let events: [V1CashDrawerEvent]?

    public init(id: String?, eventType: V1CashDrawerShiftEventType?, openedAt: String?, endedAt: String?, closedAt: String?, employeeIds: [String]?, openingEmployeeId: String?, endingEmployeeId: String?, closingEmployeeId: String?, _description: String?, startingCashMoney: V1Money?, cashPaymentMoney: V1Money?, cashRefundsMoney: V1Money?, cashPaidInMoney: V1Money?, cashPaidOutMoney: V1Money?, expectedCashMoney: V1Money?, closedCashMoney: V1Money?, device: Device?, events: [V1CashDrawerEvent]?) {
        self.id = id
        self.eventType = eventType
        self.openedAt = openedAt
        self.endedAt = endedAt
        self.closedAt = closedAt
        self.employeeIds = employeeIds
        self.openingEmployeeId = openingEmployeeId
        self.endingEmployeeId = endingEmployeeId
        self.closingEmployeeId = closingEmployeeId
        self._description = _description
        self.startingCashMoney = startingCashMoney
        self.cashPaymentMoney = cashPaymentMoney
        self.cashRefundsMoney = cashRefundsMoney
        self.cashPaidInMoney = cashPaidInMoney
        self.cashPaidOutMoney = cashPaidOutMoney
        self.expectedCashMoney = expectedCashMoney
        self.closedCashMoney = closedCashMoney
        self.device = device
        self.events = events
    }

    public enum CodingKeys: String, CodingKey { 
        case id
        case eventType = "event_type"
        case openedAt = "opened_at"
        case endedAt = "ended_at"
        case closedAt = "closed_at"
        case employeeIds = "employee_ids"
        case openingEmployeeId = "opening_employee_id"
        case endingEmployeeId = "ending_employee_id"
        case closingEmployeeId = "closing_employee_id"
        case _description = "description"
        case startingCashMoney = "starting_cash_money"
        case cashPaymentMoney = "cash_payment_money"
        case cashRefundsMoney = "cash_refunds_money"
        case cashPaidInMoney = "cash_paid_in_money"
        case cashPaidOutMoney = "cash_paid_out_money"
        case expectedCashMoney = "expected_cash_money"
        case closedCashMoney = "closed_cash_money"
        case device
        case events
    }

}

