/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.11-SNAPSHOT
 *
 */


import Foundation


/** Represents Square&#39;s estimated quantity of items in a particular state at a particular location based on the known history of physical counts and inventory adjustments */

public struct InventoryCount: Codable {

    /** The Square generated ID of the [CatalogObject](#type-catalogobject) being tracked. */
    public let catalogObjectId: String?
    /** The [CatalogObjectType](#type-catalogobjecttype) of the [CatalogObject](#type-catalogobject) being tracked. Tracking is only supported for the &#x60;ITEM_VARIATION&#x60; type. */
    public let catalogObjectType: String?
    /** The current [InventoryState](#type-inventorystate) for the related quantity of items. See [InventoryState](#type-inventorystate) for possible values */
    public let state: InventoryState?
    /** The Square ID of the [Location](#type-location) where the related quantity of items are being tracked. */
    public let locationId: String?
    /** The number of items in the count as a decimal string. Can support up to 5 digits after the decimal point.  _Important_: The Point of Sale app and Dashboard do not currently support decimal quantities. If a Point of Sale app or Dashboard attempts to read a decimal quantity on inventory counts or adjustments, the quantity will be rounded down to the nearest integer. For example, &#x60;2.5&#x60; will become &#x60;2&#x60;, and &#x60;-2.5&#x60; will become &#x60;-3&#x60;.  Read [Decimal Quantities (BETA)](/orders-api/what-it-does#decimal-quantities) for more information. */
    public let quantity: String?
    /** A read-only timestamp in RFC 3339 format that indicates when Square received the most recent physical count or adjustment that had an affect on the estimated count. */
    public let calculatedAt: String?

    public init(catalogObjectId: String?, catalogObjectType: String?, state: InventoryState?, locationId: String?, quantity: String?, calculatedAt: String?) {
        self.catalogObjectId = catalogObjectId
        self.catalogObjectType = catalogObjectType
        self.state = state
        self.locationId = locationId
        self.quantity = quantity
        self.calculatedAt = calculatedAt
    }

    public enum CodingKeys: String, CodingKey { 
        case catalogObjectId = "catalog_object_id"
        case catalogObjectType = "catalog_object_type"
        case state
        case locationId = "location_id"
        case quantity
        case calculatedAt = "calculated_at"
    }

}

