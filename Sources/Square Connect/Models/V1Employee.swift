/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.11-SNAPSHOT
 *
 */


import Foundation


/** Represents one of a business&#39;s employees. */

public struct V1Employee: Codable, Identifiable {

    /** The employee&#39;s unique ID. */
    public let id: String?
    /** The employee&#39;s first name. */
    public let firstName: String
    /** The employee&#39;s last name. */
    public let lastName: String
    /** The ids of the employee&#39;s associated roles. Currently, you can specify only one or zero roles per employee. */
    public let roleIds: [String]?
    /** The IDs of the locations the employee is allowed to clock in at. */
    public let authorizedLocationIds: [String]?
    /** The employee&#39;s email address. */
    public let email: String?
    /** CWhether the employee is ACTIVE or INACTIVE. Inactive employees cannot sign in to Square Register.Merchants update this field from the Square Dashboard. See [V1EmployeeStatus](#type-v1employeestatus) for possible values */
    public let status: V1EmployeeStatus?
    /** An ID the merchant can set to associate the employee with an entity in another system. */
    public let externalId: String?
    /** The time when the employee entity was created, in ISO 8601 format. */
    public let createdAt: String?
    /** The time when the employee entity was most recently updated, in ISO 8601 format. */
    public let updatedAt: String?

    public init(id: String?, firstName: String, lastName: String, roleIds: [String]?, authorizedLocationIds: [String]?, email: String?, status: V1EmployeeStatus?, externalId: String?, createdAt: String?, updatedAt: String?) {
        self.id = id
        self.firstName = firstName
        self.lastName = lastName
        self.roleIds = roleIds
        self.authorizedLocationIds = authorizedLocationIds
        self.email = email
        self.status = status
        self.externalId = externalId
        self.createdAt = createdAt
        self.updatedAt = updatedAt
    }

    public enum CodingKeys: String, CodingKey { 
        case id
        case firstName = "first_name"
        case lastName = "last_name"
        case roleIds = "role_ids"
        case authorizedLocationIds = "authorized_location_ids"
        case email
        case status
        case externalId = "external_id"
        case createdAt = "created_at"
        case updatedAt = "updated_at"
    }

}

