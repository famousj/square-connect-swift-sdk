/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.11-SNAPSHOT
 *
 */


import Foundation


/** Filter for &#x60;Order&#x60; objects based on whether their &#x60;CREATED_AT&#x60;, &#x60;CLOSED_AT&#x60; or &#x60;UPDATED_AT&#x60; timestamps fall within a specified time range. You can specify the time range and which timestamp to filter for. You can filter for only one time range at a time.  For each time range, the start time and end time are inclusive. If the end time is absent, it defaults to the time of the first request for the cursor.  __Important:__ If you use the DateTimeFilter in a SearchOrders query, you must also set the &#x60;sort_field&#x60; in [OrdersSort](#type-searchorderordersort) to the same field you filter for. For example, if you set the &#x60;CLOSED_AT&#x60; field in DateTimeFilter, you must also set the &#x60;sort_field&#x60; in SearchOrdersSort to &#x60;CLOSED_AT&#x60;. Otherwise, SearchOrders will throw an error. [Learn more about filtering orders by time range](/orders-api/manage-orders#important-note-on-filtering-orders-by-time-range). */

public struct SearchOrdersDateTimeFilter: Codable {

    /** Time range for filtering on the &#x60;created_at&#x60; timestamp. If you use this value, you must also set the &#x60;sort_field&#x60; in the OrdersSearchSort object to &#x60;CREATED_AT&#x60;. */
    public let createdAt: TimeRange?
    /** Time range for filtering on the &#x60;updated_at&#x60; timestamp. If you use this value, you must also set the &#x60;sort_field&#x60; in the OrdersSearchSort object to &#x60;UPDATED_AT&#x60;. */
    public let updatedAt: TimeRange?
    /** Time range for filtering on the &#x60;closed_at&#x60; timestamp. If you use this value, you must also set the &#x60;sort_field&#x60; in the OrdersSearchSort object to &#x60;CLOSED_AT&#x60;. */
    public let closedAt: TimeRange?

    public init(createdAt: TimeRange?, updatedAt: TimeRange?, closedAt: TimeRange?) {
        self.createdAt = createdAt
        self.updatedAt = updatedAt
        self.closedAt = closedAt
    }

    public enum CodingKeys: String, CodingKey { 
        case createdAt = "created_at"
        case updatedAt = "updated_at"
        case closedAt = "closed_at"
    }

}

