/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.11-SNAPSHOT
 *
 */


import Foundation


/** Contains details necessary to fulfill a pickup order. */

public struct OrderFulfillmentPickupDetails: Codable {

    /** Information on the person meant to pick up this fulfillment from a physical location. */
    public let recipient: OrderFulfillmentRecipient?
    /** The [timestamp](#workingwithdates) indicating when this fulfillment will expire if it is not accepted. Must be in RFC 3339 format e.g., \&quot;2016-09-04T23:59:33.123Z\&quot;. Expiration time can only be set up to 7 days in the future. If &#x60;expires_at&#x60; is not set, this pickup fulfillment will be automatically accepted when placed. */
    public let expiresAt: String?
    /** The duration of time after which an open and accepted pickup fulfillment will automatically move to the &#x60;COMPLETED&#x60; state. Must be in RFC3339 duration format e.g., \&quot;P1W3D\&quot;.  If not set, this pickup fulfillment will remain accepted until it is canceled or completed. */
    public let autoCompleteDuration: String?
    /** The schedule type of the pickup fulfillment. Defaults to &#x60;SCHEDULED&#x60;. See [OrderFulfillmentPickupDetailsScheduleType](#type-orderfulfillmentpickupdetailsscheduletype) for possible values */
    public let scheduleType: OrderFulfillmentPickupDetailsScheduleType?
    /** The [timestamp](#workingwithdates) that represents the start of the pickup window. Must be in RFC3339 timestamp format, e.g., \&quot;2016-09-04T23:59:33.123Z\&quot;. For fulfillments with the schedule type &#x60;ASAP&#x60;, this is automatically set to the current time plus the expected duration to prepare the fulfillment. */
    public let pickupAt: String?
    /** The window of time in which the order should be picked up after the &#x60;pickup_at&#x60; timestamp. Must be in RFC3339 duration format, e.g., \&quot;P1W3D\&quot;. Can be used as an informational guideline for merchants. */
    public let pickupWindowDuration: String?
    /** The duration of time it takes to prepare this fulfillment. Must be in RFC3339 duration format, e.g., \&quot;P1W3D\&quot;. */
    public let prepTimeDuration: String?
    /** A note meant to provide additional instructions about the pickup fulfillment displayed in the Square Point of Sale and set by the API. */
    public let note: String?
    /** The [timestamp](#workingwithdates) indicating when the fulfillment was placed. Must be in RFC3339 timestamp format, e.g., \&quot;2016-09-04T23:59:33.123Z\&quot;. */
    public let placedAt: String?
    /** The [timestamp](#workingwithdates) indicating when the fulfillment was accepted. In RFC3339 timestamp format, e.g., \&quot;2016-09-04T23:59:33.123Z\&quot;. */
    public let acceptedAt: String?
    /** The [timestamp](#workingwithdates) indicating when the fulfillment was rejected. In RFC3339 timestamp format, e.g., \&quot;2016-09-04T23:59:33.123Z\&quot;. */
    public let rejectedAt: String?
    /** The [timestamp](#workingwithdates) indicating when the fulfillment is marked as ready for pickup. In RFC3339 timestamp format, e.g., \&quot;2016-09-04T23:59:33.123Z\&quot;. */
    public let readyAt: String?
    /** The [timestamp](#workingwithdates) indicating when the fulfillment expired. In RFC3339 timestamp format, e.g., \&quot;2016-09-04T23:59:33.123Z\&quot;. */
    public let expiredAt: String?
    /** The [timestamp](#workingwithdates) indicating when the fulfillment was picked up by the recipient. In RFC3339 timestamp format, e.g., \&quot;2016-09-04T23:59:33.123Z\&quot;. */
    public let pickedUpAt: String?
    /** The [timestamp](#workingwithdates) in RFC3339 timestamp format, e.g., \&quot;2016-09-04T23:59:33.123Z\&quot;, indicating when the fulfillment was canceled. */
    public let canceledAt: String?
    /** A description of why the pickup was canceled. Max length: 100 characters. */
    public let cancelReason: String?

    public init(recipient: OrderFulfillmentRecipient?, expiresAt: String?, autoCompleteDuration: String?, scheduleType: OrderFulfillmentPickupDetailsScheduleType?, pickupAt: String?, pickupWindowDuration: String?, prepTimeDuration: String?, note: String?, placedAt: String?, acceptedAt: String?, rejectedAt: String?, readyAt: String?, expiredAt: String?, pickedUpAt: String?, canceledAt: String?, cancelReason: String?) {
        self.recipient = recipient
        self.expiresAt = expiresAt
        self.autoCompleteDuration = autoCompleteDuration
        self.scheduleType = scheduleType
        self.pickupAt = pickupAt
        self.pickupWindowDuration = pickupWindowDuration
        self.prepTimeDuration = prepTimeDuration
        self.note = note
        self.placedAt = placedAt
        self.acceptedAt = acceptedAt
        self.rejectedAt = rejectedAt
        self.readyAt = readyAt
        self.expiredAt = expiredAt
        self.pickedUpAt = pickedUpAt
        self.canceledAt = canceledAt
        self.cancelReason = cancelReason
    }

    public enum CodingKeys: String, CodingKey { 
        case recipient
        case expiresAt = "expires_at"
        case autoCompleteDuration = "auto_complete_duration"
        case scheduleType = "schedule_type"
        case pickupAt = "pickup_at"
        case pickupWindowDuration = "pickup_window_duration"
        case prepTimeDuration = "prep_time_duration"
        case note
        case placedAt = "placed_at"
        case acceptedAt = "accepted_at"
        case rejectedAt = "rejected_at"
        case readyAt = "ready_at"
        case expiredAt = "expired_at"
        case pickedUpAt = "picked_up_at"
        case canceledAt = "canceled_at"
        case cancelReason = "cancel_reason"
    }

}

