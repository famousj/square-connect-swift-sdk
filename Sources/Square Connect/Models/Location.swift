/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.11-SNAPSHOT
 *
 */


import Foundation


/** Represents one of a business&#39;s locations. */

public struct Location: Codable, Identifiable {

    /** The location&#39;s unique ID. */
    public let id: String?
    /** The location&#39;s name. Location names are set by the account owner and displayed in the dashboard as the location&#39;s nickname */
    public let name: String?
    /** The location&#39;s physical address. */
    public let address: Address?
    /** The [IANA Timezone Database](https://www.iana.org/time-zones) identifier for the location&#39;s timezone. */
    public let timezone: String?
    /** Indicates which Square features are enabled for the location. See [LocationCapability](#type-locationcapability) for possible values */
    public let capabilities: [LocationCapability]?
    /** The location&#39;s status See [LocationStatus](#type-locationstatus) for possible values */
    public let status: LocationStatus?
    /** The time when the location was created, in RFC 3339 format. */
    public let createdAt: String?
    /** The identifier of the merchant that owns the location. */
    public let merchantId: String?
    /** The location&#39;s country, in ISO 3166-1-alpha-2 format. See [Country](#type-country) for possible values */
    public let country: Country?
    /** The language associated with the location in [BCP 47 format](https://tools.ietf.org/html/bcp47#appendix-A). */
    public let languageCode: String?
    /** The currency used for all transactions at this location, specified in __ISO 4217 format__. For example, the currency for a location processing transactions in the United States is &#39;USD&#39;. See [Currency](#type-currency) for possible values */
    public let currency: Currency?
    /** The location&#39;s phone_number. */
    public let phoneNumber: String?
    /** The location&#39;s business_name which is shown to its customers. For example, this is the name printed on its customer&#39;s receipts. */
    public let businessName: String?
    /** The location&#39;s type, as set by the account owner in the Square dashboard. Typically used to indicate whether or not the location object represents a physical space like a building or mall space. See [LocationType](#type-locationtype) for possible values */
    public let type: LocationType?
    /** The location&#39;s website, as set by the account owner in the Square dashboard.  Default: none; only exists if explicitly set. */
    public let websiteUrl: URL?
    /**   The hours of operation for a business location.  Default: none; only exists if explicitly set. */
    public let businessHours: BusinessHours?
    /** The email of the location. */
    public let businessEmail: String?
    /** The business description of the location. */
    public let _description: String?
    /** The Twitter username of the location without the &#39; */
    public let twitterUsername: String?
    /** The Instagram username of the location without the &#39; */
    public let instagramUsername: String?
    /** The Facebook profile URL of the location. The URL should begin with &#39;facebook.com/&#39;. */
    public let facebookUrl: URL?
    /** The physical coordinates (latitude and longitude) of the location. */
    public let coordinates: Coordinates?
    /** The logo image URL of the location. */
    public let logoUrl: URL?
    /** The Point of Sale background image URL of the location. */
    public let posBackgroundUrl: URL?

    public init(id: String?, name: String?, address: Address?, timezone: String?, capabilities: [LocationCapability]?, status: LocationStatus?, createdAt: String?, merchantId: String?, country: Country?, languageCode: String?, currency: Currency?, phoneNumber: String?, businessName: String?, type: LocationType?, websiteUrl: URL?, businessHours: BusinessHours?, businessEmail: String?, _description: String?, twitterUsername: String?, instagramUsername: String?, facebookUrl: URL?, coordinates: Coordinates?, logoUrl: URL?, posBackgroundUrl: URL?) {
        self.id = id
        self.name = name
        self.address = address
        self.timezone = timezone
        self.capabilities = capabilities
        self.status = status
        self.createdAt = createdAt
        self.merchantId = merchantId
        self.country = country
        self.languageCode = languageCode
        self.currency = currency
        self.phoneNumber = phoneNumber
        self.businessName = businessName
        self.type = type
        self.websiteUrl = websiteUrl
        self.businessHours = businessHours
        self.businessEmail = businessEmail
        self._description = _description
        self.twitterUsername = twitterUsername
        self.instagramUsername = instagramUsername
        self.facebookUrl = facebookUrl
        self.coordinates = coordinates
        self.logoUrl = logoUrl
        self.posBackgroundUrl = posBackgroundUrl
    }

    public enum CodingKeys: String, CodingKey { 
        case id
        case name
        case address
        case timezone
        case capabilities
        case status
        case createdAt = "created_at"
        case merchantId = "merchant_id"
        case country
        case languageCode = "language_code"
        case currency
        case phoneNumber = "phone_number"
        case businessName = "business_name"
        case type
        case websiteUrl = "website_url"
        case businessHours = "business_hours"
        case businessEmail = "business_email"
        case _description = "description"
        case twitterUsername = "twitter_username"
        case instagramUsername = "instagram_username"
        case facebookUrl = "facebook_url"
        case coordinates
        case logoUrl = "logo_url"
        case posBackgroundUrl = "pos_background_url"
    }

}

