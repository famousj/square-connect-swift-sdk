/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.11-SNAPSHOT
 *
 */


import Foundation


/** The line item being returned in an Order. */

public struct OrderReturnLineItem: Codable {

    /** Unique identifier for this return line item entry. */
    public let uid: String?
    /** &#x60;uid&#x60; of the LineItem in the original sale Order. */
    public let sourceLineItemUid: String?
    /** The name of the line item. */
    public let name: String?
    /** The quantity returned, formatted as a decimal number. For example: &#x60;\&quot;3\&quot;&#x60;.  Line items with a &#x60;quantity_unit&#x60; can have non-integer quantities. For example: &#x60;\&quot;1.70000\&quot;&#x60;. */
    public let quantity: String
    /** The unit and precision that this return line item&#39;s quantity is measured in. */
    public let quantityUnit: OrderQuantityUnit?
    /** The note of the returned line item. */
    public let note: String?
    /** The [CatalogItemVariation](#type-catalogitemvariation) id applied to this returned line item. */
    public let catalogObjectId: String?
    /** The name of the variation applied to this returned line item. */
    public let variationName: String?
    /** The [CatalogModifier](#type-catalogmodifier)s applied to this line item. */
    public let returnModifiers: [OrderReturnLineItemModifier]?
    /** A list of taxes applied to this line item. On read or retrieve, this list includes both item-level taxes and any return-level taxes apportioned to this item.  This field has been deprecated in favour of &#x60;applied_taxes&#x60;. */
    public let returnTaxes: [OrderReturnTax]?
    /** A list of discounts applied to this line item. On read or retrieve, this list includes both item-level discounts and any return-level discounts apportioned to this item.  This field has been deprecated in favour of &#x60;applied_discounts&#x60;. */
    public let returnDiscounts: [OrderReturnDiscount]?
    /** The list of references to &#x60;OrderReturnTax&#x60; entities applied to the returned line item. Each &#x60;OrderLineItemAppliedTax&#x60; has a &#x60;tax_uid&#x60; that references the &#x60;uid&#x60; of a top-level &#x60;OrderReturnTax&#x60; applied to the returned line item. On reads, the amount applied is populated. */
    public let appliedTaxes: [OrderLineItemAppliedTax]?
    /** The list of references to &#x60;OrderReturnDiscount&#x60; entities applied to the returned line item. Each &#x60;OrderLineItemAppliedDiscount&#x60; has a &#x60;discount_uid&#x60; that references the &#x60;uid&#x60; of a top-level &#x60;OrderReturnDiscount&#x60; applied to the returned line item. On reads, the amount applied is populated. */
    public let appliedDiscounts: [OrderLineItemAppliedDiscount]?
    /** The base price for a single unit of the line item. */
    public let basePriceMoney: Money?
    /** The total price of all item variations returned in this line item. Calculated as &#x60;base_price_money&#x60; multiplied by &#x60;quantity&#x60;. Does not include modifiers. */
    public let variationTotalPriceMoney: Money?
    /** The gross return amount of money calculated as (item base price + modifiers price) * quantity. */
    public let grossReturnMoney: Money?
    /** The total tax amount of money to return for the line item. */
    public let totalTaxMoney: Money?
    /** The total discount amount of money to return for the line item. */
    public let totalDiscountMoney: Money?
    /** The total amount of money to return for this line item. */
    public let totalMoney: Money?

    public init(uid: String?, sourceLineItemUid: String?, name: String?, quantity: String, quantityUnit: OrderQuantityUnit?, note: String?, catalogObjectId: String?, variationName: String?, returnModifiers: [OrderReturnLineItemModifier]?, returnTaxes: [OrderReturnTax]?, returnDiscounts: [OrderReturnDiscount]?, appliedTaxes: [OrderLineItemAppliedTax]?, appliedDiscounts: [OrderLineItemAppliedDiscount]?, basePriceMoney: Money?, variationTotalPriceMoney: Money?, grossReturnMoney: Money?, totalTaxMoney: Money?, totalDiscountMoney: Money?, totalMoney: Money?) {
        self.uid = uid
        self.sourceLineItemUid = sourceLineItemUid
        self.name = name
        self.quantity = quantity
        self.quantityUnit = quantityUnit
        self.note = note
        self.catalogObjectId = catalogObjectId
        self.variationName = variationName
        self.returnModifiers = returnModifiers
        self.returnTaxes = returnTaxes
        self.returnDiscounts = returnDiscounts
        self.appliedTaxes = appliedTaxes
        self.appliedDiscounts = appliedDiscounts
        self.basePriceMoney = basePriceMoney
        self.variationTotalPriceMoney = variationTotalPriceMoney
        self.grossReturnMoney = grossReturnMoney
        self.totalTaxMoney = totalTaxMoney
        self.totalDiscountMoney = totalDiscountMoney
        self.totalMoney = totalMoney
    }

    public enum CodingKeys: String, CodingKey { 
        case uid
        case sourceLineItemUid = "source_line_item_uid"
        case name
        case quantity
        case quantityUnit = "quantity_unit"
        case note
        case catalogObjectId = "catalog_object_id"
        case variationName = "variation_name"
        case returnModifiers = "return_modifiers"
        case returnTaxes = "return_taxes"
        case returnDiscounts = "return_discounts"
        case appliedTaxes = "applied_taxes"
        case appliedDiscounts = "applied_discounts"
        case basePriceMoney = "base_price_money"
        case variationTotalPriceMoney = "variation_total_price_money"
        case grossReturnMoney = "gross_return_money"
        case totalTaxMoney = "total_tax_money"
        case totalDiscountMoney = "total_discount_money"
        case totalMoney = "total_money"
    }

}

